<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">
    <data>
        <import type="android.view.View" />
        <variable
            name="viewModel"
            type="org.d3kad3nt.sunriseClock.ui.light.lightDetail.LightDetailViewModel" />
        <variable
            name="brightnessSliderTouchListener"
            type="org.d3kad3nt.sunriseClock.ui.light.lightDetail.LightDetailFragment.BrightnessSliderTouchListener" />
    </data>
    <androidx.swiperefreshlayout.widget.SwipeRefreshLayout
        android:id="@+id/swipe_refresh_layout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintTop_toBottomOf="@id/light_loading"
        app:setOnRefreshListener="@{()-> viewModel.refreshLight()}"
        app:refreshing="@{viewModel.swipeRefreshing}">
        <androidx.constraintlayout.widget.ConstraintLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            tools:context="org.d3kad3nt.sunriseClock.ui.light.lightDetail.LightDetailFragment">
            <com.google.android.material.progressindicator.LinearProgressIndicator
                android:id="@+id/progress_indicator_light_loading"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:indeterminate="true"
                android:visibility="@{viewModel.loadingIndicatorVisibility}"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toTopOf="parent" />
            <!-- Todo: Could show different images depending on the type of light (isSwitchable, isDimmable, ...) -->
            <!-- Todo: Make image size dynamic to better match differing screen sizes and landscape mode. -->
            <androidx.appcompat.widget.AppCompatImageView
                android:id="@+id/imageview_light"
                android:layout_width="96dp"
                android:layout_height="wrap_content"
                android:paddingTop="20dp"
                android:scaleType="fitCenter"
                android:adjustViewBounds="true"
                app:srcCompat="@drawable/lightbulb_24dp"
                app:layout_constraintTop_toBottomOf="@id/progress_indicator_light_loading"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintEnd_toEndOf="parent"/>
            <!-- Todo: Enable/disable control based on reachability. Last time, sometimes checked buttons were no longer show for active lights.-->
            <com.google.android.material.button.MaterialButtonToggleGroup
                android:id="@+id/button_toggle_group_light_state"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:paddingTop="20dp"
                app:layout_constraintTop_toBottomOf="@+id/imageview_light"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:singleSelection="true"
                app:check="@{viewModel.light.data.isOn ? @id/button_on : @id/button_off}">
                <com.google.android.material.button.MaterialButton
                    style="?attr/materialButtonOutlinedStyle"
                    android:id="@+id/button_off"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="@string/light_off_action"
                    android:onClick="@{() -> viewModel.setLightOnState(false)}">
                </com.google.android.material.button.MaterialButton>
                <com.google.android.material.button.MaterialButton
                    style="?attr/materialButtonOutlinedStyle"
                    android:id="@+id/button_on"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="@string/light_on_action"
                    android:onClick="@{() -> viewModel.setLightOnState(true)}">
                </com.google.android.material.button.MaterialButton>
            </com.google.android.material.button.MaterialButtonToggleGroup>
            <com.google.android.material.textview.MaterialTextView
                android:id="@+id/label_brightness"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:paddingTop="32dp"
                android:text="@string/light_brightness_label"
                android:visibility="@{viewModel.light.data.isDimmable ? View.VISIBLE : View.GONE}"
                android:labelFor="@id/slider_brightness"
                app:layout_constraintTop_toBottomOf="@id/button_toggle_group_light_state"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintEnd_toEndOf="parent"/>
            <!-- OnSliderTouchListener contains two methods and therefore cannot be used with lambda expressions from databinding.  -->
            <com.google.android.material.slider.Slider
                android:id="@+id/slider_brightness"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:enabled="@{viewModel.light.data.isReachable}"
                android:stepSize="1"
                android:value="@{viewModel.light.data.brightness}"
                android:valueFrom="0"
                android:valueTo="100"
                android:visibility="@{viewModel.light.data.isDimmable ? View.VISIBLE : View.GONE}"
                app:tickVisible="false"
                app:addOnSliderTouchListener="@{brightnessSliderTouchListener}"
                app:layout_constraintTop_toBottomOf="@id/label_brightness"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintEnd_toEndOf="parent" />
            <com.google.android.material.card.MaterialCardView
                style="@style/Widget.Material3.CardView.Filled"
                android:id="@+id/card_not_reachable"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                app:cardBackgroundColor="@color/md_theme_light_error"
                app:contentPaddingBottom="8dp"
                app:contentPaddingLeft="16dp"
                app:contentPaddingRight="16dp"
                app:contentPaddingTop="8dp"
                app:layout_constraintTop_toBottomOf="@id/slider_brightness"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                tools:visibility="@{viewModel.notReachableCardVisibility}">
                <com.google.android.material.textview.MaterialTextView
                    android:id="@+id/label_not_reachable"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="@string/light_not_reachable"
                    android:textSize="18sp"
                    android:textStyle="bold" />
            </com.google.android.material.card.MaterialCardView>
        </androidx.constraintlayout.widget.ConstraintLayout>
    </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>
</layout>